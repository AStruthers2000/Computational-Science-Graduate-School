install.packages("here")
library("here")
here()
getwd()
#Install and load necessary libraries
install.packages("Hmisc")
install.packages("polycor")
install.packages("ggm")
install.packages("Rcmdr")
getwd()
here()
getwd()
setwd(getwd() + "//Data//")
setwd(file.path(getwd(), "Data"))
getwd()
setwd(file.path(getwd(), "Data"))
getwd()
data <- read.csv("seminartwodata.csv", header = FALSE)
calc_pearson <- function(x, y)
{
r <- cor(x, y, method = "pearson")
r2 <- r^2
c <- cov(x, y)
se <- sqrt(c(var(x), var(y)) / length(x) - 2)
sig <- cor.test(x, y)$p.value
return(c(r = r, r2 = r2, covar = c, sig = sig, se = se))
}
#Separate the columns into pairs to be analyzed separately
g1 <- data[, c(1, 2)]
g2 <- data[, c(3, 4)]
g3 <- data[, c(5, 6)]
View(g1)
View(g1)
View(data)
View(data)
result1 <- cbind(g1, calc_pearson(g1[, 1], g1[, 2]))
calc_pearson <- function(x, y)
{
r <- cor(x, y, method = "pearson")
r2 <- r^2
c <- cov(x, y)
se <- sqrt(c(var(x), var(y)) / length(x) - 2)
sig <- cor.test(x, y)$p.value
return(c(r = r, r2 = r2, covariance = c, significance = sig, standard_error = se))
}
#Separate the columns into pairs to be analyzed separately
g1 <- data[, c(1, 2)]
g2 <- data[, c(3, 4)]
g3 <- data[, c(5, 6)]
result1 <- cbind(g1, calc_pearson(g1[, 1], g1[, 2]))
cor(g1, method = "pearson")
r <- cor(g1, method = "pearson")
r2 <- r^2
r
r2
c <- cov(g1)
View(c)
View(c)
se <- sqrt(c(var(x), var(y)) / length(x) - 2)
se <- sqrt(c(var(g1)) / length(x) - 2)
se <- sqrt(c(var(g1)) / length(g1) - 2)
var(g1)
length(g1)
length(g1[, 1])
se <- sqrt(c(var(g1)) / length(g1[],1]) - 2)
se <- sqrt(c(var(g1)) / length(g1[,1]) - 2)
length(g1[, 1]) - 2
var(g1)
se <- sqrt(var(g1) / length(g1[,1]) - 2)
se <- sqrt(var(g1) / (length(g1[,1]) - 2))
calc_pearson <- function(x, y)
{
r <- cor(x, y, method = "pearson")
r2 <- r^2
c <- cov(x, y)
se <- sqrt(c(var(x), var(y)) / (length(x) - 2))
sig <- cor.test(x, y)$p.value
return(c(r = r, r2 = r2, covariance = c, significance = sig, standard_error = se))
}
result1 <- cbind(g1, calc_pearson(g1[, 1], g1[, 2]))
#Separate the columns into pairs to be analyzed separately
g1 <- data[, c(1, 2)]
g2 <- data[, c(3, 4)]
g3 <- data[, c(5, 6)]
result1 <- cbind(g1, calc_pearson(g1[, 1], g1[, 2]))
length(g1[, 2]) - 2
sig <- cor.test(g1)
sig <- cor.test(g1[,1], g1[,2])
sig$p.value
result1 <- cbind(g1, calc_pearson(g1[, 1], g1[, 2]))
result1 <- calc_pearson(g1[, 1], g1[, 2])
result1
result2 <- calc_pearson(g1[, 1], g1[, 2])
result2
calc_pearson <- function(g)
{
r <- cor(g, method = "pearson")
r2 <- r^2
c <- cov(g)
se <- sqrt(var(g) / (length(g[, 1]) - 2))
sig <- cor.test(g[, 1], g[, 2])$p.value
return(c(r = r, r2 = r2, covariance = c, significance = sig, standard_error = se))
}
#Separate the columns into pairs to be analyzed separately
g1 <- data[, c(1, 2)]
g2 <- data[, c(3, 4)]
g3 <- data[, c(5, 6)]
p_r1 <- calc_pearson(g1)
p_r2 <- calc_pearson(g2)
p_r3 <- calc_pearson(g3)
p_r1
p_r2
p_r3
getwd()
setwd(file.path(getwd(), "Data"))
getwd()
data <- read.csv("seminartwodata.csv", header = FALSE)
calc_pearson <- function(g)
{
r <- cor(g, method = "pearson")
r2 <- r^2
c <- cov(g)
se <- sqrt(var(g) / (length(g[, 1]) - 2))
sig <- cor.test(g[, 1], g[, 2])$p.value
return(c(r = r, r2 = r2, covariance = c, significance = sig, standard_error = se))
}
#Separate the columns into pairs to be analyzed separately
g1 <- data[, c(1, 2)]
g2 <- data[, c(3, 4)]
g3 <- data[, c(5, 6)]
p_r1 <- calc_pearson(g1)
p_r2 <- calc_pearson(g2)
p_r3 <- calc_pearson(g3)
p_r1
p_r1
p_r1
calc_pearson <- function(g)
{
x <- g[, 1]
y <- g[, 2]
r <- cor(x, y, method = "pearson")
r2 <- r^2
c <- cov(x, y)
se <- sqrt(c(var(x), var(y)) / (length(x) - 2))
sig <- cor.test(x, y)$p.value
return(c(r = r, r2 = r2, covariance = c, significance = sig, standard_error = se))
}
p_r1 <- calc_pearson(g1)
p_r1
p_r1 <- calc_pearson(g1)
p_r2 <- calc_pearson(g2)
p_r3 <- calc_pearson(g3)
p_r1
p_r2
p_r3
ggplot(g1, aes(x = g1[, 1], y = g1[, 2])) + geom_point() + xlab("X Value") + ylab("Y values") + ggtitle("Scatter Plot of X and Y")
#Install and load necessary libraries
package.install("ggplot2")
#Install and load necessary libraries
install.packages("ggplot2")
install.packages("ggplot2")
#Install and load necessary libraries
install.packages("ggplot2")
library(ggplot2)
#Separate the columns into pairs to be analyzed separately
g1 <- data[, c(1, 2)]
g2 <- data[, c(3, 4)]
g3 <- data[, c(5, 6)]
ggplot(g1, aes(x = g1[, 1], y = g1[, 2])) + geom_point() + xlab("X Value") + ylab("Y values") + ggtitle("Scatter Plot of X and Y")
p_r1
ggplot(g1, aes(x = g1[, 1], y = g1[, 2])) + geom_point() + xlab("X Value") + ylab("Y values") + ggtitle("Scatter Plot of X and Y")
p_r1 <- calc_pearson(g1)
p_r1
ggplot(g2, aes(x = g2[, 1], y = g2[, 2])) + geom_point() + xlab("X Value") + ylab("Y values") + ggtitle("Scatter Plot of X and Y")
p_r2 <- calc_pearson(g2)
p_r2
g3 <- data[, c(5, 6)]
ggplot(g3, aes(x = g3[, 1], y = g3[, 2])) + geom_point() + xlab("X Value") + ylab("Y values") + ggtitle("Scatter Plot of X and Y")
p_r3 <- calc_pearson(g3)
p_r3
ggplot(g1, aes(x = g1[, 2], y = g1[, 1])) + geom_point() + xlab("Group 1 X Values") + ylab("Group 1 Y values") + ggtitle("Scatter Plot of Group 1")
ggplot(g1, aes(x = g1[, 1], y = g1[, 2])) + geom_point() + xlab("Group 1 X Values") + ylab("Group 1 Y values") + ggtitle("Scatter Plot of Group 1")
ggplot(g1, aes(x = g1[, 1], y = g1[, 2])) + geom_point() + xlab("Group 1 X Values") + ylab("Group 1 Y values") + ggtitle("Scatter Plot of Group 1")
ggplot(g2, aes(x = g2[, 1], y = g2[, 2])) + geom_point() + xlab("Group 2 X Values") + ylab("Group 2 Y values") + ggtitle("Scatter Plot of Group 2")
ggplot(g3, aes(x = g3[, 1], y = g3[, 2])) + geom_point() + xlab("Group 3 X Values") + ylab("Group 3 Y values") + ggtitle("Scatter Plot of Group 3")
calc_pearson <- function(g)
{
x <- g[, 1]
y <- g[, 2]
r <- cor(x, y, method = "pearson")
r2 <- r^2
c <- cov(x, y)
se <- sqrt(c(var(x), var(y)) / (length(x) - 2))
sig <- cor.test(x, y)$p.value
p <- 2 * pnorm(-abs(r) / se)
return(c(r = r, r2 = r2, covariance = c, significance = sig, standard_error = se, p = p))
}
p_r1 <- calc_pearson(g1)
p_r1
calc_pearson <- function(g)
{
x <- g[, 1]
y <- g[, 2]
r <- cor(x, y, method = "pearson")
r2 <- r^2
c <- cov(x, y)
se <- sqrt(c(var(x), var(y)) / (length(x) - 2))
sig <- cor.test(x, y)$p.value
return(c(r = r, r2 = r2, covariance = c, significance = sig, standard_error = se))
}
# Define a function to calculate Spearman's rho
calc_spearman <- function(x, y) {
rho <- cor(x, y, method = "spearman")
c <- cov(x, y)
se <- sqrt((2 * (2 * length(x) + 5)) / (9 * (length(x) - 1)))
sig <- cor.test(x, y)$p.value
return(list(rho = rho, covariance = c, significance = sig, standard_error = se))
}
#Separate the columns into pairs to be analyzed separately
g1 <- data[, c(1, 2)]
g2 <- data[, c(3, 4)]
g3 <- data[, c(5, 6)]
ggplot(g1, aes(x = g1[, 1], y = g1[, 2])) + geom_point() + xlab("Group 1 X Values") + ylab("Group 1 Y values") + ggtitle("Scatter Plot of Group 1")
# Define a function to calculate Spearman's rho
calc_spearman <- function(g) {
x <- g[, 1]
y <- g[, 2]
rho <- cor(x, y, method = "spearman")
c <- cov(x, y)
se <- sqrt((2 * (2 * length(x) + 5)) / (9 * (length(x) - 1)))
sig <- cor.test(x, y)$p.value
return(list(rho = rho, covariance = c, significance = sig, standard_error = se))
}
#Analyze the first two columns first
ggplot(g1, aes(x = g1[, 1], y = g1[, 2])) + geom_point() + xlab("Group 1 X Values") + ylab("Group 1 Y values") + ggtitle("Scatter Plot of Group 1")
p_r1 <- calc_pearson(g1)
c_r1 <- calc_spearman(g1)
p_r1
c_r1
# Define a function to calculate Spearman's rho
calc_spearman <- function(g) {
x <- g[, 1]
y <- g[, 2]
rho <- cor(x, y, method = "spearman")
c <- cov(x, y)
se <- sqrt((2 * (2 * length(x) + 5)) / (9 * (length(x) - 1)))
sig <- cor.test(x, y)$p.value
return(c(rho = rho, covariance = c, significance = sig, standard_error = se))
}
#Analyze the first two columns first
ggplot(g1, aes(x = g1[, 1], y = g1[, 2])) + geom_point() + xlab("Group 1 X Values") + ylab("Group 1 Y values") + ggtitle("Scatter Plot of Group 1")
p_r1 <- calc_pearson(g1)
c_r1 <- calc_spearman(g1)
p_r1
c_r1
#Analyze the second two columns
ggplot(g2, aes(x = g2[, 1], y = g2[, 2])) + geom_point() + xlab("Group 2 X Values") + ylab("Group 2 Y values") + ggtitle("Scatter Plot of Group 2")
p_r2 <- calc_pearson(g2)
c_r2 <- calc_spearman(g2)
p_r2
c_r2
#Analyze the third two columns
ggplot(g3, aes(x = g3[, 1], y = g3[, 2])) + geom_point() + xlab("Group 3 X Values") + ylab("Group 3 Y values") + ggtitle("Scatter Plot of Group 3")
p_r3 <- calc_pearson(g3)
c_r3 <- calc_spearman(g3)
p_r3
c_r3
# Define a function to calculate Spearman's rho
calc_spearman <- function(g) {
x <- g[, 1]
y <- g[, 2]
rho <- cor(x, y, method = "spearman")
c <- cov(x, y)
se <- sd(c(x, y)) / sqrt(length((x)))
sig <- cor.test(x, y)$p.value
return(c(rho = rho, covariance = c, significance = sig, standard_error = se))
}
p_r1 <- calc_pearson(g1)
c_r1 <- calc_spearman(g1)
p_r1
c_r1
calc_pearson <- function(g)
{
x <- g[, 1]
y <- g[, 2]
r <- cor(x, y, method = "pearson")
r2 <- r^2
c <- cov(x, y)
se <- sqrt(c(var(x), var(y)) / (length(x) - 2))
sig <- cor.test(x, y)$p.value
return(c(r = r, r2 = r2, covariance = c, significance = sig, standard_error = se))
}
# Define a function to calculate Spearman's rho
calc_spearman <- function(g) {
x <- g[, 1]
y <- g[, 2]
rho <- cor(x, y, method = "spearman")
c <- cov(x, y)
se <- sqrt(c(var(x), var(y)) / (length(x) - 2))
sig <- cor.test(x, y)$p.value
return(c(rho = rho, covariance = c, significance = sig, standard_error = se))
}
#Separate the columns into pairs to be analyzed separately
g1 <- data[, c(1, 2)]
g2 <- data[, c(3, 4)]
g3 <- data[, c(5, 6)]
#Analyze the first two columns first
ggplot(g1, aes(x = g1[, 1], y = g1[, 2])) + geom_point() + xlab("Group 1 X Values") + ylab("Group 1 Y values") + ggtitle("Scatter Plot of Group 1")
p_r1 <- calc_pearson(g1)
c_r1 <- calc_spearman(g1)
p_r1
c_r1
#Analyze the second two columns
ggplot(g2, aes(x = g2[, 1], y = g2[, 2])) + geom_point() + xlab("Group 2 X Values") + ylab("Group 2 Y values") + ggtitle("Scatter Plot of Group 2")
p_r2 <- calc_pearson(g2)
c_r2 <- calc_spearman(g2)
p_r2
c_r2
#Analyze the third two columns
ggplot(g3, aes(x = g3[, 1], y = g3[, 2])) + geom_point() + xlab("Group 3 X Values") + ylab("Group 3 Y values") + ggtitle("Scatter Plot of Group 3")
p_r3 <- calc_pearson(g3)
c_r3 <- calc_spearman(g3)
p_r3
c_r3
